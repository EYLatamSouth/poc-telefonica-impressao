
# the name of Camel
camel.springboot.name = MyCamel

# what to say
greeting = Hello World

# how often to trigger the timer
timer.period = 2000

# to automatic shutdown the JVM after a period of time
#camel.springboot.duration-max-seconds=60
#camel.springboot.duration-max-messages=100

# add for example: &repeatCount=5 to the timer endpoint to make Camel idle
#camel.springboot.duration-max-idle-seconds=15

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=info,health,camelroutes

# turn on actuator health check
management.endpoint.health.enabled = true

# allow to obtain basic information about camel routes (read only mode)
management.endpoint.camelroutes.enabled = true
management.endpoint.camelroutes.read-only = true

# to configure logging levels
#logging.level.org.springframework = INFO
#logging.level.org.apache.camel.spring.boot = INFO
#logging.level.org.apache.camel.impl = DEBUG
#logging.level.sample.camel = DEBUG

server.port=8081

#SFTP settings
config.sftp.server=bancos.blob.core.windows.net
config.sftp.sendUser=bancos.envio.telefonica
config.sftp.returnUser=bancos.retorno.telefonica
config.sftp.password=Ia6GM3ceCT+HfXaN+39GUnjAO9n3xe9G

directory.received=./recived/
directory.sent=./sent/
directory.processed=./processed/

# to automatic shutdown the JVM after a period of time
#camel.springboot.duration-max-seconds=60
#camel.springboot.duration-max-messages=100

# add for example: &repeatCount=5 to the timer endpoint to make Camel idle
#camel.springboot.duration-max-idle-seconds=15

# to configure logging levels
#logging.level.org.springframework = INFO
#logging.level.org.apache.camel.spring.boot = INFO
#logging.level.org.apache.camel.impl = DEBUG
#logging.level.sample.camel = DEBUG


# to configure logging levels
#logging.level.org.springframework = INFO
#logging.level.org.apache.camel.spring.boot = INFO
#logging.level.org.apache.camel.impl = DEBUG
#logging.level.sample.camel = DEBUG


#spring.data.mongodb.uri=mongodb+srv://<username>:<pwd>@<cluster>.mongodb.net/mygrocerylist
#spring.data.mongodb.database=mygrocerylist

spring.data.mongodb.uri=mongodb://poctelefonicamongo:frkR8faLmYNZMQKCBjy1nx27BsshM9IW3jfRdT41xzpaxjMx0QdbeuFV9BhcW24Tvco73Mkn70FtACDbPH0QQw==@poctelefonicamongo.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@poctelefonicamongo@
spring.data.mongodb.database=poctelefonicamongo

# Kafka configuration properties
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule  required username= 'QL7YIVCCGVJ5SUZU' password='xUr9Gip6fk2JMjuPWFCKup0ltRrs8T63kbxBl4QQMC8N/nCjAcu+YToilSkAOX+X';
spring.kafka.properties.security.protocol=SASL_SSL
enable.security=true

# Producer properties
spring.kafka.producer.bootstrap-servers=pkc-56d1g.eastus.azure.confluent.cloud:9092
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serializer.StringSerializer
topic.name.producer=cobranca_retorno

# Consumer properties
spring.kafka.consumer.bootstrap-servers=pkc-56d1g.eastus.azure.confluent.cloud:9092
spring.kafka.consumer.group-id=consumer-group_id-1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
topic.name.consumer=faturamento_post_event


# Common Kafka Properties
auto.create.topics.enable=false


#SQL Server
spring.datasource.url=jdbc:sqlserver://poctelefonicasql.database.windows.net:1433;database=poctelefonicasql;user=rafael@poctelefonicasql;password=e@Ui1239876;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;

