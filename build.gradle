plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'

    id "java-library"
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"

    id "org.sonarqube" version "3.5.0.2730"

}

description = 'A Camel Spring Boot Route'
apply plugin: 'maven-publish'
group = 'br.com.telefonica'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

def projectName = 'ms-impressao'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation('com.microsoft.azure:applicationinsights-runtime-attach:3.4.4')

    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-undertow:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.3'
    implementation 'org.apache.camel.springboot:camel-spring-boot-starter:3.19.0'
    implementation 'org.apache.camel.springboot:camel-stream-starter:3.19.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
    testImplementation 'org.apache.camel:camel-test-spring-junit5:3.19.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestCoverageVerification
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}

def nexusHost = project.findProperty("nexusHost")
def nexusPort = project.findProperty("nexusPort")
def nexusRepoUser = project.findProperty("nexusRepoUser")
def nexusRepoPassword = project.findProperty("nexusRepoPassword")

publishing {

    publications {
        maven(MavenPublication) {
            artifact("build/libs/$projectName-$version"+".jar") {
                extension 'jar'
            }
        }
        mavenJava(MavenPublication) {
            from(components.java)
        }
    }
    repositories {
        maven {
            url "$nexusHost:$nexusPort/repository/maven-nexus-repo/"
            allowInsecureProtocol = true
            credentials {
                username nexusRepoUser
                password nexusRepoPassword
            }}
    }
}